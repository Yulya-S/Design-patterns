swagger: '2.0'
info:
  description: Набор сервисов для работы с системой учета /ООО Ромашка/
  version: "1.0.0"
  title: RestAPI
consumes:
  - application/json
  - application/xml
  - application/text
produces:
  - application/json
  - application/xml
  - application/text
basePath: "/api"

paths:
  /dataset/load:
    post:
      summary: Востановление данных из файла
      operationId: main.data_load
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
      parameters:
        - name: data
          in: body
          description: Данные файла
          schema:
            properties:
              items:
                $ref: '#/definitions/file'

  /dataset/save:
    post:
      summary: Сохранение данных в файл
      operationId: main.data_save
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
      parameters:
        - name: data
          in: body
          description: Данные файла
          schema:
            properties:
              items:
                $ref: '#/definitions/file'

  /nomenclature/get:
    get:
      summary: Получить ключи номенклатуры
      operationId: main.get_nomenclatures_keys
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка

  /nomenclature/get/{name}:
    get:
      summary: Получить номенклатуру по имени
      operationId: main.get_nomenclature
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
      parameters:
        - name: name
          in: path
          description: Имя номенклатуры
          required: true
          type: string

  /nomenclature/delete/{text}:
    delete:
      summary: Удаление номенклатуры
      operationId: main.delete_nomenclature
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
      parameters:
        - name: text
          in: path
          description: Номенклатура
          required: true
          type: string

  /nomenclature/put/{text}:
    put:
      summary: Создание номенклатуры
      operationId: main.put_nomenclature
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
      parameters:
        - name: text
          in: path
          description: Номенклатура
          required: true
          type: string

  /nomenclature/patch/{text}:
    patch:
      summary: Изменение номенклатуры
      operationId: main.patch_nomenclature
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
      parameters:
        - name: text
          in: path
          description: Номенклатура
          required: true
          type: string

  /warehouse:
    get:
      summary: Получение списка складов
      operationId: main.get_warehouses
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка

  /warehouse/block_period/{data}:
    post:
      summary: Установка даты блокировки
      operationId: main.set_block_period
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
      parameters:
        - name: data
          in: path
          description: Новая дата блокировки
          required: true
          type: string

  /warehouse/block_period:
    post:
      summary: Получение даты блокировки
      operationId: main.get_block_period
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка

  /warehouse/get_turnover:
    post:
      summary: Получение складского оборота
      operationId: main.get_turnover
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
      parameters:
        - name: data
          in: body
          description: Данные для фильтрации
          schema:
            properties:
              items:
                $ref: '#/definitions/turnover_filters'

  /warehouse/get_transactions:
    post:
      summary: Получение транзакции с учетом фильтрации
      operationId: main.get_transactions
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
      parameters:
        - name: data
          in: body
          description: Данные для фильтрации
          schema:
            properties:
              items:
                $ref: '#/definitions/two_filters'

  /reports/tbs:
    post:
      summary: Сформировать оборотно-сальдовую ведомость
      operationId: main.get_tbs
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
      parameters:
        - name: data
          in: body
          description: Структура данных
          schema:
            properties:
              items:
                $ref: '#/definitions/tbs'

  /reports/comparison_formats:
    get:
      summary: Получить список форматов
      operationId: main.c_formats
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка

  /reports/model_names:
    get:
      summary: Получить наименования моделей данных
      operationId: main.model_names
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка

  /reports/{entity}:
    post:
      summary: Получение отчета с учетом фильтрации
      operationId: main.filter_with_filter
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
      parameters:
        - name: entity
          in: path
          description: Уникальное наименование модели данных
          required: true
          type: string
        - name: data
          in: body
          description: Структура для выполнения фильтрации данных
          schema:
            properties:
              items:
                $ref: '#/definitions/filter'

  /reports/formats:
    get:
      summary: Получить список форматов
      operationId: main.formats
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка

  /reports/ranges/{format}:
    get:
      summary: Получить список единиц измерения
      operationId: main.reportRanges
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
    parameters:
      - name: format
        in: path
        description: Уникальный код формата
        required: true
        type: integer

  /reports/groups/{format}:
    get:
      summary: Получить список групп
      operationId: main.reportGroups
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
    parameters:
      - name: format
        in: path
        description: Уникальный код формата
        required: true
        type: integer

  /reports/nomenclatures/{format}:
    get:
      summary: Получить список номенклатуры
      operationId: main.reportNomenclatures
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
    parameters:
      - name: format
        in: path
        description: Уникальный код формата
        required: true
        type: integer

  /reports/receipts/{format}:
    get:
      summary: Получить список рецептов
      operationId: main.reportReceipts
      produces:
        - application/text
      responses:
        200:
          description: OK
          schema:
            type: object
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
    parameters:
      - name: format
        in: path
        description: Уникальный код формата
        required: true
        type: integer


definitions:
  filter:
    type: array
    example: [
      {
        "field": "name",
        "comparison_format": 2,
        "value": "м"
      }
    ]
  two_filters:
    type: array
    example: [
      {
        "warehouse": {
          "comparison_format": 1,
          "value": None
        },
        "nomenclature": {
          "comparison_format": 1,
          "value": "гр"
        }
      }
    ]
  turnover_filters:
    type: array
    example: [
      {
        "warehouse": "Ул. N, дом. 1",
        "nomenclature": "гр",
        "range": "гр",
        "periods": {
          "begin": "24-10-2024",
          "end": "26-10-2024"
        }
      }
    ]
  tbs:
    type: array
    example: [
      {
        "warehouse_code": "",
        "begin": "24-10-2024",
        "end": "26-10-2024"
      }
    ]
  file:
    type: array
    example: [
      {
        "file_name": "data.json"
      }
    ]
